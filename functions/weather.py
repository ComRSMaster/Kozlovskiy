import requests
from telebot.apihelper import ApiTelegramException
from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton, ForceReply, ReplyKeyboardRemove
from telebot.util import quick_markup

from helpers.bot import bot
from helpers.config import weather_key
from helpers.storage import users, save

weather_msg_markup = quick_markup({"–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥": {'callback_data': "btn_change_city"},
                                   "–û–±–Ω–æ–≤–∏—Ç—å üîÑÔ∏è": {'callback_data': "btn_update_weather"}})
select_private = ReplyKeyboardMarkup(True, input_field_placeholder="–í–≤–µ–¥–∏ –≥–æ—Ä–æ–¥").add(
    KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True))
select_public = ForceReply(input_field_placeholder="–í–≤–µ–¥–∏ –≥–æ—Ä–æ–¥")
icon_to_emoji = {'01': "‚òÄÔ∏è", '02': "üå§", '03': "üå•", '04': "‚òÅÔ∏è", '09': "üå¶Ô∏è",
                 '10': "üåß", '11': "‚õà", '13': "üå®Ô∏è", '50': "üå´Ô∏è"}


def weather_cmd_handler(msg: Message):
    user = users[str(msg.chat.id)]
    if 'lat' not in user:
        change_city_button(msg.chat.id, msg.chat.type)
        return
    bot.send_message(msg.chat.id, get_weather(user['lat'], user['lon']), 'HTML', reply_markup=weather_msg_markup)


def change_city_button(chat_id, chat_type):
    users[str(chat_id)]['s'] = "wait_for_city"
    bot.send_message(chat_id, "–í–≤–µ–¥–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ",
                     reply_markup=select_private if chat_type == 'private' else select_public)


def update_weather_button(call):
    user = users[str(call.message.chat.id)]
    try:
        bot.edit_message_text(get_weather(user['lat'], user['lon']), call.message.chat.id, call.message.message_id,
                              parse_mode='HTML', reply_markup=weather_msg_markup)
        bot.answer_callback_query(call.id, "–ü–æ–≥–æ–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
    except ApiTelegramException:
        bot.answer_callback_query(call.id, "–ù–∏—á–µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å")


def get_weather(lat, lon):
    weather = requests.get(
        f"https://api.openweathermap.org/data/2.5/weather?"
        f"lat={lat}&lon={lon}&appid={weather_key}&lang=ru&units=metric").json()
    name = weather['name'] if weather['name'] else f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: <i>{lat}, {lon}</i>"
    return f"<b>{name}:  <i>{weather['main']['temp']}¬∞C\n" \
           f"{icon_to_emoji[weather['weather'][0]['icon'][:2]]} {weather['weather'][0]['description']}</i></b>\n" \
           f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫:  <b><i>{weather['main']['feels_like']}¬∞C</i></b>\n\n" \
           f"–î–∞–≤–ª–µ–Ω–∏–µ:  <b><i>{weather['main']['pressure'] / 10}–∫–ü–∞</i></b>\n" \
           f"–í–ª–∞–∂–Ω–æ—Å—Ç—å:  <b><i>{weather['main']['humidity']}%</i></b>"


def search_city(msg: Message):
    user = users[str(msg.chat.id)]
    if msg.content_type == 'location':
        user['lat'] = msg.location.latitude
        user['lon'] = msg.location.longitude
    elif msg.text:
        city_json = requests.get(
            f"http://api.openweathermap.org/geo/1.0/direct?q={msg.text}&limit=1&appid={weather_key}").json()
        if len(city_json) == 0:
            bot.send_message(msg.chat.id, "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–≤–µ–¥–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –µ—â—ë —Ä–∞–∑.\n/cancel - –æ—Ç–º–µ–Ω–∞",
                             reply_markup=select_private if msg.chat.type == 'private' else select_public)
            return
        user['lat'] = city_json[0]['lat']
        user['lon'] = city_json[0]['lon']
    else:
        return
    user['s'] = ''
    bot.send_message(msg.chat.id, "–ì–æ—Ä–æ–¥ —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω!", reply_markup=ReplyKeyboardRemove())
    weather_cmd_handler(msg)
    save()
