importScripts("lib/chess.min.js");var game=new Chess;var undo_stack=[];var STACK_SIZE=50;var FLAG_EXACT=0;var FLAG_UPPER=1;var FLAG_LOWER=2;function setupZobristHashing(){var N_BITS=32;var pieceValues={w:{p:1,r:2,n:3,b:4,q:5,k:6},b:{p:7,r:8,n:9,b:10,q:11,k:12}};var zobristLookupTable=[];for(var i=0;i<64;++i){zobristLookupTable.push(new Uint32Array(12));for(var j=0;j<12;++j){var randomBitstring=Math.random()*Math.pow(2,N_BITS);zobristLookupTable[i][j]=randomBitstring}}return function(board){var h=0;for(var i=0;i<board.length;++i){for(var j=0;j<board.length;++j){var square=board[i][j];if(square){h^=pieceValues[square.color][square.type]*zobristLookupTable[i][j]}}}return h}}var getZobristHash=setupZobristHashing();var TABLE_SIZE=2e6;transpositionTable=new Array(TABLE_SIZE);var transpositionTableIdx=function(zobristKey){return Math.abs(zobristKey)%TABLE_SIZE};var transpositionTablePut=function(zobristKey,depth,value,move,flag){var idx=transpositionTableIdx(zobristKey);var previousValue=transpositionTable[idx];var newValue;if(previousValue&&previousValue.hash==zobristKey){if(previousValue.depth>depth){newValue=previousValue}}else{newValue={hash:zobristKey,depth:depth,value:value,move:move,flag:flag}}transpositionTable[idx]=newValue};var transpositionTableGet=function(zobristKey){var idx=transpositionTableIdx(zobristKey);var previousValue=transpositionTable[idx];if(previousValue&&previousValue.hash==zobristKey){return previousValue}else{return null}};var swapMoves=function(arr,sourceIdx,destIdx){var temp=arr[sourceIdx];arr[sourceIdx]=arr[destIdx];arr[destIdx]=temp;return arr};var uglyMoveKey=function(ugly_move){return ugly_move.color+ugly_move.piece+ugly_move.from+ugly_move.to};var minimaxRoot=function(depth,game,isMaximisingPlayer){var newGameMoves=game.ugly_moves();var bestMove=-9999;var bestMoveFound;for(var i=0;i<newGameMoves.length;i++){var newGameMove=newGameMoves[i];game.simple_move(newGameMove);var value=minimax(depth-1,game,-1e4,1e4,!isMaximisingPlayer);game.simple_undo();if(value>=bestMove){bestMove=value;bestMoveFound=newGameMove}}return bestMoveFound};var minimax=function(depth,game,alpha,beta,isMaximisingPlayer){if(depth===0){return-evaluateBoard(game.board())}var zobristKey=getZobristHash(game.board());var cachedBoardState=transpositionTableGet(zobristKey);if(cachedBoardState&&cachedBoardState.depth>depth){if(cachedBoardState.flag==FLAG_EXACT)return cachedBoardState.value;if(cachedBoardState.flag==FLAG_UPPER)beta=Math.min(beta,cachedBoardState.value);if(cachedBoardState.flag==FLAG_LOWER)alpha=Math.max(alpha,cachedBoardState.value);if(alpha>beta)return cachedBoardState.value}var newGameMoves=game.ugly_moves();var bestMove;var bestMoveFound;if(isMaximisingPlayer){bestMove=-9999;if(cachedBoardState&&cachedBoardState.depth<=depth&&(cachedBoardState.flag==FLAG_UPPER||cachedBoardState.flag==FLAG_EXACT)){for(var i=0;i<newGameMoves.length;i++){if(uglyMoveKey(newGameMoves[i])==uglyMoveKey(cachedBoardState.move)){swapMoves(newGameMoves,0,i);break}}}for(var i=0;i<newGameMoves.length;i++){game.simple_move(newGameMoves[i]);var nextMoveValue=minimax(depth-1,game,alpha,beta,!isMaximisingPlayer);game.simple_undo();if(nextMoveValue>bestMove){bestMove=nextMoveValue;bestMoveFound=newGameMoves[i]}alpha=Math.max(alpha,bestMove);if(beta<=alpha){transpositionTablePut(zobristKey,depth,bestMove,bestMoveFound,FLAG_UPPER);return bestMove}}}else{bestMove=9999;if(cachedBoardState&&cachedBoardState.depth<=depth&&(cachedBoardState.flag==FLAG_LOWER||cachedBoardState.flag==FLAG_EXACT)){for(var i=0;i<newGameMoves.length;i++){if(uglyMoveKey(newGameMoves[i])==uglyMoveKey(cachedBoardState.move)){swapMoves(newGameMoves,0,i);break}}}for(var i=0;i<newGameMoves.length;i++){game.simple_move(newGameMoves[i]);var nextMoveValue=minimax(depth-1,game,alpha,beta,!isMaximisingPlayer);game.simple_undo();if(nextMoveValue<bestMove){bestMove=nextMoveValue;bestMoveFound=newGameMoves[i]}beta=Math.min(beta,bestMove);if(beta<=alpha){transpositionTablePut(zobristKey,depth,bestMove,bestMoveFound,FLAG_LOWER);return bestMove}}}transpositionTablePut(zobristKey,depth,bestMove,bestMoveFound,FLAG_EXACT);return bestMove};var evaluateBoard=function(board){var totalEvaluation=0;for(var i=0;i<8;i++){for(var j=0;j<8;j++){totalEvaluation=totalEvaluation+getPieceValue(board[i][j],i,j)}}return totalEvaluation};var reverseArray=function(array){return array.slice().reverse()};var pawnEvalWhite=[[0,0,0,0,0,0,0,0],[5,5,5,5,5,5,5,5],[1,1,2,3,3,2,1,1],[.5,.5,1,2.5,2.5,1,.5,.5],[0,0,0,2,2,0,0,0],[.5,-.5,-1,0,0,-1,-.5,.5],[.5,1,1,-2,-2,1,1,.5],[0,0,0,0,0,0,0,0]];var pawnEvalBlack=reverseArray(pawnEvalWhite);var knightEval=[[-5,-4,-3,-3,-3,-3,-4,-5],[-4,-2,0,0,0,0,-2,-4],[-3,0,1,1.5,1.5,1,0,-3],[-3,.5,1.5,2,2,1.5,.5,-3],[-3,0,1.5,2,2,1.5,0,-3],[-3,.5,1,1.5,1.5,1,.5,-3],[-4,-2,0,.5,.5,0,-2,-4],[-5,-4,-3,-3,-3,-3,-4,-5]];var bishopEvalWhite=[[-2,-1,-1,-1,-1,-1,-1,-2],[-1,0,0,0,0,0,0,-1],[-1,0,.5,1,1,.5,0,-1],[-1,.5,.5,1,1,.5,.5,-1],[-1,0,1,1,1,1,0,-1],[-1,1,1,1,1,1,1,-1],[-1,.5,0,0,0,0,.5,-1],[-2,-1,-1,-1,-1,-1,-1,-2]];var bishopEvalBlack=reverseArray(bishopEvalWhite);var rookEvalWhite=[[0,0,0,0,0,0,0,0],[.5,1,1,1,1,1,1,.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[0,0,0,.5,.5,0,0,0]];var rookEvalBlack=reverseArray(rookEvalWhite);var evalQueen=[[-2,-1,-1,-.5,-.5,-1,-1,-2],[-1,0,0,0,0,0,0,-1],[-1,0,.5,.5,.5,.5,0,-1],[-.5,0,.5,.5,.5,.5,0,-.5],[0,0,.5,.5,.5,.5,0,-.5],[-1,.5,.5,.5,.5,.5,0,-1],[-1,0,.5,0,0,0,0,-1],[-2,-1,-1,-.5,-.5,-1,-1,-2]];var kingEvalWhite=[[-3,-4,-4,-5,-5,-4,-4,-3],[-3,-4,-4,-5,-5,-4,-4,-3],[-3,-4,-4,-5,-5,-4,-4,-3],[-3,-4,-4,-5,-5,-4,-4,-3],[-2,-3,-3,-4,-4,-3,-3,-2],[-1,-2,-2,-2,-2,-2,-2,-1],[2,2,0,0,0,0,2,2],[2,3,1,0,0,1,3,2]];var kingEvalBlack=reverseArray(kingEvalWhite);var getPieceValue=function(piece,x,y){if(piece===null){return 0}var getAbsoluteValue=function(piece,isWhite,x,y){if(piece.type==="p"){return 10+(isWhite?pawnEvalWhite[y][x]:pawnEvalBlack[y][x])}else if(piece.type==="r"){return 50+(isWhite?rookEvalWhite[y][x]:rookEvalBlack[y][x])}else if(piece.type==="n"){return 30+knightEval[y][x]}else if(piece.type==="b"){return 30+(isWhite?bishopEvalWhite[y][x]:bishopEvalBlack[y][x])}else if(piece.type==="q"){return 90+evalQueen[y][x]}else if(piece.type==="k"){return 900+(isWhite?kingEvalWhite[y][x]:kingEvalBlack[y][x])}throw"Unknown piece type: "+piece.type};var absoluteValue=getAbsoluteValue(piece,piece.color==="w",x,y);return piece.color==="w"?absoluteValue:-absoluteValue};function undo(){undo_stack.push(game.undo());if(undo_stack.length>STACK_SIZE)undo_stack.shift()}function redo(){game.move(undo_stack.pop())}onmessage=e=>{let d=e.data;switch(d.cmd){case"ai":game.ugly_move(minimaxRoot(d.depth,game,true));break;case"snapEnd":postMessage({cmd:d.cmd,fen:game.fen(),history:game.history()});break;case"move":let move=game.move({from:d.source,to:d.target,promotion:"q"});if(move===null)postMessage({cmd:d.cmd,action:"snapback"});else postMessage({cmd:d.cmd,action:"drop",target:d.target,history:game.history(),fen:game.fen()});break;case"status":let title="Ничья";let description;let status;let type="end";let is_check;if(game.in_checkmate()){is_check=true;if(game.turn()==="w"){title="Мат белым";description="Вы проиграли"}else{title="Мат чёрным";description="Вы выиграли"}status=`Мат • ${(d.color==="b"?"Белые":"Чёрные")+" победили"}`}else if(game.insufficient_material())description="Невозможно поставить мат";else if(game.in_threefold_repetition())description="Троекратное повторение позиции";else if(game.in_stalemate())description="Пат";else if(game.in_draw())description="Правило 50 ходов";else if(game.in_check()){is_check=true;type="check"}else type="";if(title==="Ничья")status=`Ничья • ${description}`;postMessage({cmd:d.cmd,type:type,title:title,desc:description,status:status,turn:game.turn(),sq:is_check?game.king_sq(game.turn()):null});break;case"moves":let moves=game.moves({square:d.square,verbose:true});postMessage({cmd:d.cmd,moves:moves,square:d.square});break;case"undo":let hist_len=game.history().length;if(hist_len<=2)postMessage({cmd:d.cmd,do:false});if(hist_len>=2){undo();undo();postMessage({cmd:d.cmd,do:true,fen:game.fen(),history:game.history()})}break;case"redo":if(undo_stack.length<=2){postMessage({cmd:d.cmd,do:false})}if(undo_stack.length>=2){redo();redo();postMessage({cmd:d.cmd,do:true,fen:game.fen(),history:game.history()})}break;case"pos":if(d.fen)game.load(d.fen);else game.reset();undo_stack=[];postMessage({cmd:d.cmd,white:game.turn()==="w"});break;case"restart":postMessage({cmd:d.cmd});break}};